openapi: 3.0.0
info:
  title: Interop Trouble Ticket
  description: >+
    Based on **TMF API Reference : TMF - 621 Trouble Ticket 4.0.0**

  version: 1.0.0
tags:
  - name: troubleTicket
  - name: hub
servers:
  - url: https://serverRoot/api/troubleTicket/v1
paths:
  /troubleTicket:
    get:
      operationId: listTroubleTicket
      summary: List or find TroubleTicket objects
      description: This operation list or find TroubleTicket entities
      tags:
        - troubleTicket
      parameters:
        - name: fields
          description: Comma-separated properties to be provided in response
          required: false
          in: query
          schema:
            type: string
        - name: status
          in: query
          description: Filter status
          schema:
            $ref: "#/components/schemas/TroubleTicketStatusType"
          style: form
        - name: lastUpdate
          in: query
          description: Filter lastUpdate
          schema:
            type: string
            format: date-time
          style: form
        - name: lastUpdate.lte
          in: query
          description: Filter lastUpdate before
          schema:
            type: string
            format: date-time
          style: form
        - name: lastUpdate.lt
          in: query
          description: Filter lastUpdate strictly_before
          schema:
            type: string
            format: date-time
          style: form
        - name: lastUpdate.gte
          in: query
          description: Filter lastUpdate after
          schema:
            type: string
            format: date-time
          style: form
        - name: lastUpdate.gt
          in: query
          description: Filter lastUpdate strictly_after
          schema:
            type: string
            format: date-time
          style: form
        - name: creationDate
          in: query
          description: Filter creationDate
          schema:
            type: string
            format: date-time
          style: form
        - name: creationDate.lte
          in: query
          description: Filter creationDate before
          schema:
            type: string
            format: date-time
          style: form
        - name: creationDate.lt
          in: query
          description: Filter creationDate strictly_before
          schema:
            type: string
            format: date-time
          style: form
        - name: creationDate.gte
          in: query
          description: Filter creationDate after
          schema:
            type: string
            format: date-time
          style: form
        - name: creationDate.gt
          in: query
          description: Filter creationDate strictly_after
          schema:
            type: string
            format: date-time
          style: form
        - name: offset
          description: Requested index for start of resources to be provided in response
          required: false
          in: query
          schema:
            type: integer
        - name: limit
          description: Requested number of resources to be provided in response
          required: false
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: Success
          headers:
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TroubleTicket"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "405":
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createTroubleTicket
      summary: Creates a TroubleTicket
      description: This operation creates a TroubleTicket entity.
      tags:
        - troubleTicket
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TroubleTicket_Create"
        description: The TroubleTicket to be created
        required: true
      responses:
        "201":
          description: Created
          headers:
            Location:
              schema:
                type: string
              description: "URI of the newly created resource"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TroubleTicket"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "405":
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/troubleTicket/{id}":
    get:
      operationId: retrieveTroubleTicket
      summary: Retrieves a TroubleTicket by ID
      description: This operation retrieves a TroubleTicket entity. Attribute selection is
        enabled for all first level attributes.
      tags:
        - troubleTicket
      parameters:
        - name: id
          description: Identifier of the TroubleTicket
          required: true
          in: path
          schema:
            type: string
        - name: fields
          description: Comma-separated properties to provide in response
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TroubleTicket"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "405":
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      operationId: patchTroubleTicket
      summary: Updates partially a TroubleTicket
      description: This operation updates partially a TroubleTicket entity.
      tags:
        - troubleTicket
      parameters:
        - name: id
          description: Identifier of the TroubleTicket
          required: true
          in: path
          schema:
            type: string
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: "#/components/schemas/TroubleTicket_Update"
        description: The TroubleTicket to be updated
        required: true
      responses:
        "200":
          description: Updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TroubleTicket"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "405":
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /hub:
    post:
      summary: Subscribe to notification
      operationId: hub
      tags:
        - hub
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                callback: # Callback URL
                  type: string
                  format: uri
                  example: https://myserver.com/send/callback
                  maxLength: 2048
                query:
                  type: string
                  format: uri
                  maxLength: 2048
              required:
                - callback
                - query
      callbacks:
        troubleTicketStatusChangeEvent:
          '{$request.body#/callback}/{$request.query.eventType}':
            post:
              operationId: notifyTroubleTicketStatusChangeEvent
              requestBody: # Contents of the callback message
                required: true
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/TroubleTicketStatusChangeEvent"
              responses: # Expected responses to the callback message
                '201':
                  description: Your server returns this code if it accepts the callback
        troubleTicketAttributeValueChangeEvent:
          '{$request.body#/callback}/{$request.query.eventType}':
            post:
              operationId: notifyTroubleTicketAttributeValueChangeEvent
              requestBody: # Contents of the callback message
                required: true
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/TroubleTicketAttributeValueChangeEvent"
              responses: # Expected responses to the callback message
                '201':
                  description: Your server returns this code if it accepts the callback
        troubleTicketCreateEvent:
          '{$request.body#/callback}/{$request.query.eventType}':
            post:
              operationId: notifyTroubleTicketCreateEvent
              requestBody: # Contents of the callback message
                required: true
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/TroubleTicketCreateEvent"
              responses: # Expected responses to the callback message
                '201':
                  description: Your server returns this code if it accepts the callback
      responses:
        "201":
          description: Subscribed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventSubscription"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "405":
          description: Method Not allowed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/hub/{id}":
    delete:
      operationId: unsubscribe
      summary: Unsubscribe to notification
      tags:
        - hub
      parameters:
        - name: id
          required: true
          in: path
          description: The id of the registered listener
          schema:
            type: string
      responses:
        "204":
          description: Deleted
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "405":
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    AttachmentRef:
      type: object
      description: Attachment reference. An attachment complements the description of an
        element (for instance a product) through video, pictures
      properties:
        id:
          type: string
          description: Unique-Identifier for this attachment
          maxLength: 255
        href:
          type: string
          description: URL serving as reference for the attachment resource
          maxLength: 2048
        description:
          type: string
          description: A narrative text describing the content of the attachment
          maxLength: 65535
        name:
          type: string
          description: Name of the related entity.
          maxLength: 255
        url:
          type: string
          description: Link to the attachment media/content
          maxLength: 2048
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
          maxLength: 255
        "@schemaLocation":
          type: string
          format: uri
          description: A URI to a JSON-Schema file that defines additional attributes and
            relationships
          maxLength: 2048
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class entity name
          maxLength: 255
        "@referredType":
          type: string
          description: The actual type of the target instance when needed for
            disambiguation.
          maxLength: 255
      required:
        - id
    Note:
      type: object
      description: Extra information about a given entity
      properties:
        id:
          type: string
          description: Identifier of the note within its containing entity (may or may not
            be globally unique, depending on provider implementation)
          maxLength: 255
        author:
          type: string
          description: Author of the note
          maxLength: 255
        date:
          type: string
          format: date-time
          description: Date of the note
        text:
          type: string
          description: Text of the note
          maxLength: 65535
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
          maxLength: 255
        "@schemaLocation":
          type: string
          format: uri
          description: A URI to a JSON-Schema file that defines additional attributes and
            relationships
          maxLength: 2048
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class entity name
          maxLength: 255
    RelatedEntity:
      type: object
      description: A reference to an entity, where the type of the entity is not known in
        advance.
      required:
        - "@referredType"
        - id
        - role
      properties:
        id:
          type: string
          description: Unique identifier of a related entity.
          maxLength: 255
        href:
          type: string
          description: Reference of the related entity.
          maxLength: 2048
        name:
          type: string
          description: Name of the related entity.
          maxLength: 255
        role:
          type: string
          description: The role of an entity.
          maxLength: 50
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
          maxLength: 255
        "@schemaLocation":
          type: string
          format: uri
          description: A URI to a JSON-Schema file that defines additional attributes and
            relationships
          maxLength: 2048
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class entity name
          maxLength: 255
        "@referredType":
          type: string
          description: The actual type of the target instance when needed for
            disambiguation.
          maxLength: 255

    jsonPathAssetGroup:
      type: object
      description: JsonPath expression used to reference an asset group
      required:
        - jsonPath
        - "@referredType"
      properties:
        jsonPath:
          type: string
          description: jsonPath expression used to point an asset group (i.e relatedEntities)
          maxLength: 2048
        role:
          type: string
          description: The role of an entity.
          maxLength: 50
        entityType:
          type: string
          description: The (sub)resource to used (filtering by json path query).
          maxLength: 255
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
          maxLength: 255
        "@referredType":
          type: string
          description: The actual type of the target instance when needed for
            disambiguation.
          maxLength: 255
        "@schemaLocation":
          type: string
          format: uri
          description: A URI to a JSON-Schema file that defines additional attributes and
            relationships
          maxLength: 2048
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class entity name
          maxLength: 255

    RelatedParty:
      type: object
      description: Related Entity reference. A related party defines party or party role linked to a specific entity.
      required:
        - '@referredType'
        - id
      properties:
        id:
          type: string
          description: Unique identifier of a related entity.
          maxLength: 255
        href:
          type: string
          description: Reference of the related entity.
          maxLength: 2048
        name:
          type: string
          description: Name of the related entity.
          maxLength: 255
        role:
          type: string
          description: Role played by the related party
          maxLength: 255
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
          maxLength: 255
        "@schemaLocation":
          type: string
          format: uri
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
          maxLength: 2048
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class entity name
          maxLength: 255
        "@referredType":
          type: string
          description: The actual type of the target instance when needed for disambiguation.
          maxLength: 255
    StatusChange:
      type: object
      description: Holds the status notification reasons and associated date the status
        changed, populated by the server
      properties:
        changeDate:
          type: string
          format: date-time
          description: The date and time the status changed.
        changeReason:
          type: string
          description: The reason why the status changed.
          maxLength: 255
        status:
          type: string
          description: The status of the trouble ticket
          maxLength: 255
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
          maxLength: 255
        "@schemaLocation":
          type: string
          format: uri
          description: A URI to a JSON-Schema file that defines additional attributes and
            relationships
          maxLength: 2048
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class entity name
          maxLength: 255
    TroubleTicket:
      type: object
      description: A trouble ticket is a record of an issue that is created, tracked, and
        managed by a trouble ticket management system
      properties:
        id:
          type: string
          description: Unique identifier of the trouble ticket
          maxLength: 255
        href:
          type: string
          description: Hyperlink, a reference to the trouble ticket entity
          maxLength: 2048
        creationDate:
          type: string
          format: date-time
          description: The date on which the trouble ticket was created
        description:
          type: string
          description: Description of the trouble or issue
          maxLength: 65535
        expectedResolutionDate:
          type: string
          format: date-time
          description: The expected resolution date determined by the trouble ticket system
        externalId:
          type: string
          description: Additional identifier coming from an external system
          maxLength: 255
        lastUpdate:
          type: string
          format: date-time
          description: The date and time that the trouble ticked was last updated
        name:
          type: string
          description: Name of the trouble ticket, typically a short description provided
            by the user that create the ticket
          maxLength: 255
        priority:
          type: string
          description: |-
            The priority of the trouble ticket and how quickly the issue should be resolved. Example: Critical, High, Medium, Low.
            The value is set by the ticket management system considering the severity, ticket type etc...'
          maxLength: 50
        resolutionDate:
          type: string
          format: date-time
          description: The date and time the trouble ticket was resolved
        severity:
          type: string
          description: |-
            The severity of the issue. Indicate the implication of the issue on the expected functionality e.g. of a system, application, service etc..
            Severity values can be for example : Critical, Major, Minor
          maxLength: 50
        statusChangeDate:
          type: string
          format: date-time
          description: The date and time the status changed.
        statusChangeReason:
          type: string
          description: The reason for changing the status
          maxLength: 255
        ticketType:
          type: string
          description: represents a business type of the trouble ticket
          maxLength: 255
        complexity:
          $ref: "#/components/schemas/ComplexityType"
        attachment:
          type: array
          items:
            $ref: "#/components/schemas/AttachmentRef"
          description: File(s) attached to the trouble ticket. e.g. pictur of broken
            device, scaning of a bill or charge
        note:
          type: array
          items:
            $ref: "#/components/schemas/Note"
          description: The note(s) that are associated to the ticket.
        relatedEntity:
          type: array
          items:
            $ref: "#/components/schemas/RelatedEntity"
          description: An entity that is related to the ticket such as a bill, a product,
            etc. The entity against which the ticket is associated.
        relatedParty:
          type: array
          items:
            $ref: "#/components/schemas/RelatedParty"
          description: The related party(ies) that are associated to the ticket.
        status:
          $ref: "#/components/schemas/TroubleTicketStatusType"
        statusChange:
          type: array
          items:
            $ref: "#/components/schemas/StatusChange"
          description: The status change history that are associated to the
            ticket.Populated by the server
        troubleTicketRelationship:
          type: array
          items:
            $ref: "#/components/schemas/TroubleTicketRelationship"
          description: A list of trouble ticket relationships (TroubleTicketRelationship
            [*]). Represents a relationship between trouble tickets
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
          maxLength: 255
        "@schemaLocation":
          type: string
          format: uri
          description: A URI to a JSON-Schema file that defines additional attributes and
            relationships
          maxLength: 2048
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class entity name
          maxLength: 255
      discriminator:
        propertyName: "@type"

    InteropTroubleTicket:
      description: Specific Interop Implementation with AssetGroup support
      allOf:
        - $ref: "#/components/schemas/TroubleTicket"
        - type: object
          properties:
            relatedAssetGroup:
              $ref: "#/components/schemas/jsonPathAssetGroup"

    TroubleTicket_Create:
      type: object
      description: >-
        A trouble ticket is a record of an issue that is created, tracked, and
        managed by a trouble ticket management system

        Skipped properties: id,href
      required:
        - description
        - ticketType
        - severity
      properties:
        description:
          type: string
          description: Description of the trouble or issue
          maxLength: 65535
        externalId:
          type: string
          description: Additional identifier coming from an external system
          maxLength: 255
        name:
          type: string
          description: Name of the trouble ticket, typically a short description provided
            by the user that create the ticket
          maxLength: 255
        severity:
          type: string
          description: |-
            The severity of the issue. Indicate the implication of the issue on the expected functionality e.g. of a system, application, service etc..
            Severity values can be for example : Critical, Major, Minor
          maxLength: 50
        ticketType:
          type: string
          description: represent a business type of the trouble ticket e.g. incident,
            complain, request
          maxLength: 255
        attachment:
          type: array
          items:
            $ref: "#/components/schemas/AttachmentRef"
          description: File(s) attached to the trouble ticket. e.g. pictur of broken
            device, scaning of a bill or charge
        note:
          type: array
          items:
            $ref: "#/components/schemas/Note"
          description: The note(s) that are associated to the ticket.
        relatedEntity:
          type: array
          items:
            $ref: "#/components/schemas/RelatedEntity"
          description: An entity that is related to the ticket such as a bill, a product,
            etc. The entity against which the ticket is associated.
        relatedParty:
          type: array
          items:
            $ref: "#/components/schemas/RelatedParty"
          description: The related party(ies) that are associated to the ticket.
        troubleTicketRelationship:
          type: array
          items:
            $ref: "#/components/schemas/TroubleTicketRelationship"
          description: A list of trouble ticket relationships (TroubleTicketRelationship
            [*]). Represents a relationship between trouble tickets
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
          maxLength: 255
        "@schemaLocation":
          type: string
          format: uri
          description: A URI to a JSON-Schema file that defines additional attributes and
            relationships
          maxLength: 2048
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class entity name
          maxLength: 255
      discriminator:
        propertyName: "@type"

    InteropTroubleTicket_Create:
      description: Specific Interop Implementation with AssetGroup support
      allOf:
        - $ref: "#/components/schemas/TroubleTicket_Create"
        - type: object
          properties:
            relatedAssetGroup:
              $ref: "#/components/schemas/jsonPathAssetGroup"

    TroubleTicket_Update:
      type: object
      description: >-
        A trouble ticket is a record of an issue that is created, tracked, and
        managed by a trouble ticket management system

        Skipped properties: id,href,creationDate,lastUpdate,statusChange,statusChangeDate
      properties:
        status:
          $ref: "#/components/schemas/TroubleTicketStatusType"
        statusChangeReason:
          type: string
          description: The reason for changing the status
          maxLength: 255
        attachment:
          type: array
          items:
            $ref: "#/components/schemas/AttachmentRef"
          description: File(s) attached to the trouble ticket. e.g. pictur of broken
            device, scaning of a bill or charge
        note:
          type: array
          items:
            $ref: "#/components/schemas/Note"
          description: The note(s) that are associated to the ticket.
        severity:
          type: string
          description: |-
            The severity of the issue. Indicate the implication of the issue on the expected functionality e.g. of a system, application, service etc..
            Severity values can be for example : Critical, Major, Minor
          maxLength: 50
        relatedParty:
          type: array
          items:
            $ref: "#/components/schemas/RelatedParty"
          description: The related party(ies) that are associated to the ticket.
        troubleTicketRelationship:
          type: array
          items:
            $ref: "#/components/schemas/TroubleTicketRelationship"
          description: A list of trouble ticket relationships (TroubleTicketRelationship
            [*]). Represents a relationship between trouble tickets
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
          maxLength: 255
        "@schemaLocation":
          type: string
          format: uri
          description: A URI to a JSON-Schema file that defines additional attributes and
            relationships
          maxLength: 2048
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class entity name
          maxLength: 255
    TroubleTicketRelationship:
      type: object
      description: Represents a relationship between trouble Trouble Tickets
      properties:
        id:
          type: string
          description: Unique identifier of the Trouble Ticket
          maxLength: 255
        href:
          type: string
          description: Reference of the Trouble Ticket
          maxLength: 2048
        name:
          type: string
          description: Name of the Trouble Ticket
          maxLength: 255
        relationshipType:
          type: string
          description: Type of the  Trouble Ticket relationship can be isChiled, dependent
            etc...
          maxLength: 50
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class
          maxLength: 255
        "@schemaLocation":
          type: string
          format: uri
          description: A URI to a JSON-Schema file that defines additional attributes and
            relationships
          maxLength: 2048
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class entity name
          maxLength: 255
    TroubleTicketStatusType:
      type: string
      description: Possible values for the status of the trouble ticket
      maxLength: 50
      enum:
        - acknowledged
        - rejected
        - pending
        - held
        - inProgress
        - cancelled
        - closed
        - resolved
    ComplexityType:
      description: Estimated complexity to solve the ticket (set by the ticket management system)
      type: string
      maxLength: 50
      enum:
        - low
        - medium
        - high
    Error:
      description: Used when an API throws an Error, typically with a HTTP error
        response-code (3xx, 4xx, 5xx)
      type: object
      required:
        - code
        - reason
      properties:
        code:
          type: string
          description: Application relevant detail, defined in the API or a common list.
          maxLength: 50
        reason:
          type: string
          description: Explanation of the reason for the error which can be shown to a
            client user.
          maxLength: 255
        message:
          type: string
          description: More details and corrective actions related to the error which can
            be shown to a client user.
          maxLength: 65535
        status:
          type: string
          description: HTTP Error code extension
          maxLength: 50
        referenceError:
          type: string
          format: uri
          description: URI of documentation describing the error.
          maxLength: 2048
        "@baseType":
          type: string
          description: When sub-classing, this defines the super-class.
          maxLength: 255
        "@schemaLocation":
          type: string
          format: uri
          description: A URI to a JSON-Schema file that defines additional attributes and
            relationships
          maxLength: 2048
        "@type":
          type: string
          description: When sub-classing, this defines the sub-class entity name.
          maxLength: 255
    TroubleTicketStatusChangeEvent:
      type: object
      description: The notification data structure
      properties:
        eventId:
          type: string
          description: The identifier of the notification.
          maxLength: 255
        eventTime:
          type: string
          format: date-time
          description: Time of the event occurrence.
        eventType:
          type: string
          description: The type of the notification.
          maxLength: 255
        correlationId:
          type: string
          description: The correlation id for this event.
          maxLength: 255
        domain:
          type: string
          description: The domain of the event.
          maxLength: 255
        title:
          type: string
          description: The title of the event.
          maxLength: 255
        description:
          type: string
          description: A description of the event.
          maxLength: 255
        priority:
          type: string
          description: A priority.
          maxLength: 50
        timeOcurred:
          type: string
          format: date-time
          description: The time the event occured.
        event:
          $ref: "#/components/schemas/TroubleTicketStatusChangeEventPayload"
    TroubleTicketCreateEvent:
      type: object
      description: The notification data structure
      properties:
        id:
          type: string
          description: Identifier of the Process flow
        href:
          type: string
          description: Reference of the ProcessFlow
        eventId:
          type: string
          description: The identifier of the notification.
        eventTime:
          type: string
          format: date-time
          description: Time of the event occurrence.
        eventType:
          type: string
          description: The type of the notification.
        correlationId:
          type: string
          description: The correlation id for this event.
        domain:
          type: string
          description: The domain of the event.
        title:
          type: string
          description: The title of the event.
        description:
          type: string
          description: An explnatory of the event.
        priority:
          type: string
          description: A priority.
        timeOcurred:
          type: string
          format: date-time
          description: The time the event occured.
        event:
          $ref: "#/components/schemas/TroubleTicketCreateEventPayload"
    TroubleTicketCreateEventPayload:
      type: object
      description: The event data structure
      properties:
        troubleTicket:
          $ref: "#/components/schemas/TroubleTicket"
    TroubleTicketStatusChangeEventPayload:
      type: object
      description: The event data structure
      properties:
        troubleTicket:
          $ref: "#/components/schemas/TroubleTicket"
    TroubleTicketAttributeValueChangeEvent:
      type: object
      description: The notification data structure
      properties:
        eventId:
          type: string
          description: The identifier of the notification.
          maxLength: 255
        eventTime:
          type: string
          format: date-time
          description: Time of the event occurrence.
        eventType:
          type: string
          description: The type of the notification.
          maxLength: 255
        correlationId:
          type: string
          description: The correlation id for this event.
          maxLength: 255
        domain:
          type: string
          description: The domain of the event.
          maxLength: 255
        title:
          type: string
          description: The title of the event.
          maxLength: 255
        description:
          type: string
          description: A description of the event.
          maxLength: 255
        priority:
          type: string
          description: A priority.
          maxLength: 50
        timeOcurred:
          type: string
          format: date-time
          description: The time the event occured.
        fieldPath:
          type: string
          description: The path identifying the object field concerned by this notification.
          maxLength: 2048
        event:
          $ref: '#/components/schemas/TroubleTicketAttributeValueChangeEventPayload'
    TroubleTicketAttributeValueChangeEventPayload:
      type: object
      description: The event data structure
      properties:
        troubleTicket:
          $ref: "#/components/schemas/TroubleTicket"
    EventSubscription:
      type: object
      description: Sets the communication endpoint address the service instance must use to deliver notification information
      properties:
        id:
          type: string
          format: uuid
          description: Id of the subscription
        callback:
          type: string
          description: The callback being registered.
          maxLength: 2048
        query:
          type: string
          description: query used to notify
          maxLength: 2048
